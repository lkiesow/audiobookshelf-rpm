name: Build FFmpeg RPMs

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/build-ffmpeg-rpms.yml
      - audiobookshelf-rpm.key
      - ffmpeg-static.spec

concurrency:
  group: audiobookshelf-rpmbuild
  cancel-in-progress: false

jobs:
  build:
    strategy:
      matrix:
        osversion:
          - '8'
          - '9'
    name: build (el${{ matrix.osversion }})
    runs-on: ubuntu-latest
    container:
      image: quay.io/centos/centos:stream${{ matrix.osversion }}
    steps:
      - name: install tools
        run: >
          dnf install -y
          createrepo
          git
          gnupg
          rpmdevtools
          rpm-sign

      - name: clone repository
        uses: actions/checkout@v4

      - name: prepare git
        run: |
          git config --global user.name "Deployment Bot"
          git config --global user.email "bot@lkiesow.dev"

      - name: prepare gpg
        env:
          GPG_KEY: ${{ secrets.GPG_KEY }}
        run: |
          echo "${GPG_KEY}" | gpg --import
          echo '%_gpg_name 1E8091C566FF00D9356DAE35D340FB28EF9633AE' > ~/.rpmmacros

      - name: prepare build tree
        run: |
          rpmdev-setuptree

      - name: download sources
        run: |
          spectool -g -R ffmpeg-static.spec

      - name: build rpm
        run: |
          rpmbuild -ba ffmpeg-static.spec

      - name: switch to repository branch
        run: |
          chown root:root .
          git fetch
          git checkout el${{ matrix.osversion }}

      - name: sign rpms
        run: |
          rpmsign --addsign ~/rpmbuild/RPMS/x86_64/*.rpm

      - name: copy rpms to repository
        run: |
          cp -v ~/rpmbuild/RPMS/x86_64/*.rpm .

      - name: add new rpms
        run: |
          git add ./*.rpm

      - name: update repository metadata
        run: |
          createrepo --update .
          git add ./repodata/

      - name: commit changes
        run: |
          git status
          RPM="$(ls -1 ~/rpmbuild/RPMS/x86_64/ | tail -n1)"
          git diff --staged --quiet || git commit -m "Build ${RPM} $(date)"

      - name: push updates
        run: |
          git remote -v
          git push

      - name: send notification
        env:
          MATRIX_TOKEN: ${{ secrets.MATRIX_TOKEN }}
          URL_MESSAGE: 'https://matrix.org/_matrix/client/r0/rooms/%21gwaqKjZRpCQkpkTVwh%3Amatrix.org/send/m.room.message'
        run: |
          RPM="$(ls -1 ~/rpmbuild/RPMS/x86_64/ | tail -n1)"
          MESSAGE="Finished building ${RPM} for Audiobookshelf"
          curl -s -XPOST -d '{"msgtype":"m.text", "body":"'"${MESSAGE}"'"}' "${URL_MESSAGE}?access_token=${MATRIX_TOKEN}"
